"use strict";(self.webpackChunkxxx252525_github_io=self.webpackChunkxxx252525_github_io||[]).push([[104],{1021:(i,s)=>{s.A=(i,s)=>{const a=i.__vccOpts||i;for(const[i,l]of s)a[i]=l;return a}},7397:(i,s,a)=>{a.r(s),a.d(s,{comp:()=>D,data:()=>S});var l=a(6254);const e=a.p+"assets/img/image-20250217144836651.8217c704.png",n=a.p+"assets/img/image-20250217150448840.9dc6213e.png",h=a.p+"assets/img/image-20250217171841640.830c4a60.png",t=a.p+"assets/img/image-20250217173202915.d532e060.png",p=a.p+"assets/img/image-20250217174256049.5a6df96a.png",k=a.p+"assets/img/image-20250217175330906.7de90655.png",d=a.p+"assets/img/image-20250217180229193.cfb7f3b0.png",r=a.p+"assets/img/image-20250217205509738.dd512a5b.png",c=a.p+"assets/img/image-20250217205644604.f4a17178.png",g=a.p+"assets/img/image-20250218211658016.13b07fad.png",F=a.p+"assets/img/image-20250218212501236.f1a6a022.png",o=a.p+"assets/img/image-20250218212959412.8377502e.png",A=a.p+"assets/img/image-20250218213710871.bd761999.png",y=a.p+"assets/img/image-20250218213735305.b32de163.png",u=a.p+"assets/img/image-20250218213926814.75050460.png",v=a.p+"assets/img/image-20250218214618726.99792529.png",b=a.p+"assets/img/image-20250218214910131.76dcc770.png",m=a.p+"assets/img/image-20250218220025336.dbb7b5ca.png",C=a.p+"assets/img/image-20250218220700798.504bdc6c.png",f=a.p+"assets/img/image-20250218220822066.6cfb3c05.png",E=a.p+"assets/img/image-20250218220915827.fbdac5cc.png",B=a.p+"assets/img/image-20250218221358664.bdfab70b.png",x={},D=(0,a(1021).A)(x,[["render",function(i,s){return(0,l.uX)(),(0,l.CE)("div",null,s[0]||(s[0]=[(0,l.Fv)('<h1 id="_04-shell变量" tabindex="-1"><a class="header-anchor" href="#_04-shell变量"><span>04-shell变量</span></a></h1><p>在Shell脚本编程中，变量是用来存储和使用数据的内存位置。Shell变量可以是数字、文本字符串或者文件名等。这里我们不讲解shell编程，shell编程我们会专门开一个内容板块来学习，请跳转到此处学习：<a href="https://xxx252525.github.io/Shell/%E3%80%82" target="_blank" rel="noopener noreferrer">https://xxx252525.github.io/Shell/。</a></p><h2 id="变量的类型" tabindex="-1"><a class="header-anchor" href="#变量的类型"><span>变量的类型</span></a></h2><p>在shell变量中我们有几种类型，分别是：</p><ul><li>环境变量：这个变量是全局的，打开的每个Shell中都是有效的。例如，HOME、PATH、PWD 等。</li><li>局部变量：这些变量仅在它们被定义的Shell会话中有效。它们通常用于脚本的局部作用域。</li><li>位置变量：这些变量与脚本的参数有关，例如 $0（脚本名称）、$1 - $9（脚本参数）。</li><li>特殊变量：带有$与其他分数符号的特殊变量。</li><li>预定义变量:是Bash中已经定义好的变量，变量名不能自定义，变量作用也是固定的</li></ul><table><thead><tr><th>变量分类</th><th>名称</th><th>作用</th><th>内容</th></tr></thead><tbody><tr><td>用户自定义变量</td><td>自定义</td><td>自定义</td><td>自定义</td></tr><tr><td>用户自定义环境变量</td><td>自定义</td><td>自定义</td><td>自定义</td></tr><tr><td>系统自带环境变量</td><td>确定</td><td>确定</td><td>自定义</td></tr><tr><td>位置参数变量</td><td>确定</td><td>确定</td><td>自定义</td></tr><tr><td>预定一变量</td><td>确定</td><td>确定</td><td>自定义</td></tr></tbody></table><h2 id="变量的定义" tabindex="-1"><a class="header-anchor" href="#变量的定义"><span>变量的定义</span></a></h2><p>在Shell中定义变量通常不需要声明类型，只需直接赋值即可。</p><p>变量一般是我们自己定义的，或者是开发者在系统定义好的变量。我们在应用变量的时候一般毁在前面添加<code>$</code>符号，例如前面的<code>echo $PATH</code>输出环境变量的路径。</p><p>变量定义有以下注意事项：</p><ul><li>变量名和等号之间不能有空格。</li><li>变量名通常是大写的，但这不是强制的（特别是对于局部变量）。</li><li>引用变量值时，通常要在变量名前加上美元符号（$）。</li></ul><p>例如：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">VARIABLE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;value&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>用法如下：</p><figure><img src="'+e+'" alt="变量的使用" tabindex="0" loading="lazy"><figcaption>变量的使用</figcaption></figure><p>常见的shell环境变量</p><table><thead><tr><th style="text-align:left;">环境变量</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>HOME</code></td><td style="text-align:left;">用户的家目录路径。</td></tr><tr><td style="text-align:left;"><code>PATH</code></td><td style="text-align:left;">执行命令时要搜索的目录列表。</td></tr><tr><td style="text-align:left;"><code>PWD</code></td><td style="text-align:left;">当前工作目录的路径。</td></tr><tr><td style="text-align:left;"><code>USER</code></td><td style="text-align:left;">当前登录的用户名。</td></tr><tr><td style="text-align:left;"><code>HOSTNAME</code></td><td style="text-align:left;">当前机器的主机名。</td></tr><tr><td style="text-align:left;"><code>SHELL</code></td><td style="text-align:left;">用户的登录Shell的路径。</td></tr><tr><td style="text-align:left;"><code>TERM</code></td><td style="text-align:left;">终端的类型。</td></tr><tr><td style="text-align:left;"><code>LANG</code></td><td style="text-align:left;">系统的语言环境设置。</td></tr><tr><td style="text-align:left;"><code>LANGUAGE</code></td><td style="text-align:left;">用户的语言环境设置。</td></tr><tr><td style="text-align:left;"><code>LC_ALL</code></td><td style="text-align:left;">覆盖所有LC_*变量的值。</td></tr><tr><td style="text-align:left;"><code>LS_COLORS</code></td><td style="text-align:left;">ls命令使用的颜色设置。</td></tr><tr><td style="text-align:left;"><code>MAIL</code></td><td style="text-align:left;">用户邮箱文件的路径。</td></tr><tr><td style="text-align:left;"><code>MAILCHECK</code></td><td style="text-align:left;">Shell检查新邮件的间隔时间（秒）。</td></tr><tr><td style="text-align:left;"><code>OPTARG</code></td><td style="text-align:left;">获取getopts命令的选项参数。</td></tr><tr><td style="text-align:left;"><code>OPTIND</code></td><td style="text-align:left;">getopts命令的下一个选项的索引。</td></tr><tr><td style="text-align:left;"><code>PS1</code></td><td style="text-align:left;">主提示符，即命令行提示符。</td></tr><tr><td style="text-align:left;"><code>PS2</code></td><td style="text-align:left;">次提示符，用于续行提示。</td></tr><tr><td style="text-align:left;"><code>IFS</code></td><td style="text-align:left;">内部字段分隔符，默认是空白字符。</td></tr><tr><td style="text-align:left;"><code>HISTFILE</code></td><td style="text-align:left;">历史命令存储的文件路径。</td></tr><tr><td style="text-align:left;"><code>HISTSIZE</code></td><td style="text-align:left;">历史命令列表的最大行数。</td></tr><tr><td style="text-align:left;"><code>RANDOM</code></td><td style="text-align:left;">每次引用时都会生成一个0到32767之间的随机整数。</td></tr><tr><td style="text-align:left;"><code>UID</code></td><td style="text-align:left;">当前用户的用户ID。</td></tr><tr><td style="text-align:left;"><code>EUID</code></td><td style="text-align:left;">当前用户的有效用户ID。</td></tr><tr><td style="text-align:left;"><code>GROUPS</code></td><td style="text-align:left;">当前用户所属组的数组。</td></tr><tr><td style="text-align:left;"><code>HOSTTYPE</code></td><td style="text-align:left;">主机类型。</td></tr><tr><td style="text-align:left;"><code>MACHTYPE</code></td><td style="text-align:left;">硬件-CPU-操作系统类型。</td></tr><tr><td style="text-align:left;"><code>OSTYPE</code></td><td style="text-align:left;">操作系统类型。</td></tr></tbody></table><h3 id="变量叠加" tabindex="-1"><a class="header-anchor" href="#变量叠加"><span>变量叠加</span></a></h3><p>变量叠加语法如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">变量名x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$变量名x</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">叠加的值</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">变量名x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">${</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">变量名x</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">叠加的值</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="'+n+'" alt="变量叠加" tabindex="0" loading="lazy"><figcaption>变量叠加</figcaption></figure><p>这就是变量叠加。</p><h3 id="变量行为查看" tabindex="-1"><a class="header-anchor" href="#变量行为查看"><span>变量行为查看</span></a></h3><p>我们如果要查看变量的属性和行为怎么办？我们需要用到<code>set</code>命令。使用用set命令可以查看所有的变量属性变量。常用选项：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\t\t如果设定此选项，调用未声明变量时会报错（默认无任何提示）</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-X</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\t\t如果设定此选项，在命令执行之前会把命令先输出一次</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\t\t读取并执行一个命令之后退出。</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\t\t标记修改的或者仓创建的变变量为导出变量。</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\t\t如果任何命令返回非零状态（即失败），则立即退出。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在shel编程中，不存在的变量和变量值为空的时候调用出来都是空的，为了更好区分二者，使用<code>set -u</code>后不存在的变量就会报错，但是这是临时生效的，例如：</p><figure><img src="'+h+'" alt="严格模式" tabindex="0" loading="lazy"><figcaption>严格模式</figcaption></figure><ul><li><strong>set -u</strong>：启用严格模式，任何未设置的变量都会导致错误。</li><li><strong>PROMPT_START</strong>: 未绑定的变量：因为 PROMPT_START 未被绑定，所以在严格模式下会抛出错误。</li><li><strong>PROMPT_DIR_COLOR: 未绑定的变量</strong>：<code>PROMPT_DIR_COLOR</code> 也未被绑定，因此会抛出错误。</li></ul><p><code>set -u</code> 是一个常用的选项，它告诉 Bash 在脚本执行过程中，如果遇到了未定义的变量（即未被赋值的变量），就立即退出并报错。这样可以避免因为变量未定义而导致脚本出现意外行为。</p><h3 id="变量删除" tabindex="-1"><a class="header-anchor" href="#变量删除"><span>变量删除</span></a></h3><p>我们创建了变量，那么如何删除变量呢？</p><p>要删除变量，我们需要使用<code>unset</code>命令，语法如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">unset</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 变量名</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>例如：</p><figure><img src="'+t+'" alt="删除变量" tabindex="0" loading="lazy"><figcaption>删除变量</figcaption></figure><h2 id="shell的基本功能" tabindex="-1"><a class="header-anchor" href="#shell的基本功能"><span>shell的基本功能</span></a></h2><h3 id="优先级" tabindex="-1"><a class="header-anchor" href="#优先级"><span>优先级</span></a></h3><p>shll的优先级如下：</p><ul><li>第一顺位执行用绝对路径或相对路径执行的命令。</li><li>第二顺位执行别名。</li><li>第三顺位执行Bash的内部命令。</li><li>第四顺位执行按照$PATH环境变量定义的目录查找顺序找到的第一个命令。</li></ul><h3 id="多命令执行符" tabindex="-1"><a class="header-anchor" href="#多命令执行符"><span>多命令执行符</span></a></h3><p>我们shell中主要有三大特殊符号，分别是<code>;</code>、<code>&amp;&amp;</code>、<code>||</code>，前面我们介绍了分号的用法，就是用于多命令执行，这里我们再讲解一次。</p><h4 id="" tabindex="-1"><a class="header-anchor" href="#"><span>;</span></a></h4><p>语法如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">commend1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">commend2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>我们只需要在不同的命令之间添加分号即可，这个分号之间的空格没有限制，最好是&gt;1。如果多条命令中存在错误的命令，这个不会影响执行，因为每一条命令之间没有逻辑关系。</p><p>如图：</p><figure><img src="'+p+'" alt="错误命令执行" tabindex="0" loading="lazy"><figcaption>错误命令执行</figcaption></figure><h4 id="-1" tabindex="-1"><a class="header-anchor" href="#-1"><span>&amp;&amp;</span></a></h4><p>前面我们做计算机基础知识扫盲的时候讲到过<code>&amp;&amp;</code>符号，这是一种逻辑符号，在计算机的编程中几乎也是通用的含义：逻辑与运算。</p><p>语法如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">commend1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">commend</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>逻辑与会产生命令之间的逻辑关系，但是也有所区别，原有的含义是只要有一个假的就是假的，而在这里有所区别，如果某一条命令出现错误，那么后面的命令将不会再执行。如图：</p><figure><img src="'+k+'" alt="逻辑与" tabindex="0" loading="lazy"><figcaption>逻辑与</figcaption></figure><h4 id="-2" tabindex="-1"><a class="header-anchor" href="#-2"><span>||</span></a></h4><p>逻辑或在这里的含义也有所区别，当第一个命令被正确执行之后，第二个命令就不会执行；当第一个命令执行不正确的时候，第二个命令才回去执行。</p><p>语法如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">commend1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> || </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">commend2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如图：</p><figure><img src="'+d+'" alt="逻辑或" tabindex="0" loading="lazy"><figcaption>逻辑或</figcaption></figure><h3 id="特殊符号" tabindex="-1"><a class="header-anchor" href="#特殊符号"><span>特殊符号</span></a></h3><p>特殊符号如下：</p><table><thead><tr><th>符号</th><th>作用</th></tr></thead><tbody><tr><td>‘’</td><td>单引号在单引号中所有的特殊符号，如“$&quot;和+“”（反引号）都没有特殊含义,所有的符号都会失去意义</td></tr><tr><td>“”</td><td>双引号在双引号中特殊符号都没有特殊含义，但是&quot;$”、“~&quot;和&quot;&quot;是例外，拥有“调用变量的值”、“引用命令&quot;和&quot;转义符&quot;的特殊含义</td></tr><tr><td>``</td><td>反引号括起来的内容是系统命令，在Bash中会先执行它</td></tr><tr><td>$()</td><td>和反引号作用一样，用来引用系统命令</td></tr><tr><td>()</td><td>用于一串命令执行时，()中的命令会在子Shell中运行</td></tr><tr><td>{}</td><td>用于一串命令执行时，{}中的命令会在当前Shel中执行。t也可以用于变量变形与替换</td></tr><tr><td>[]</td><td>用于变量的测试</td></tr><tr><td>$</td><td>用于调用变量的值，如需要调用变量name的值时，需要用$name的方式得到的变量的值</td></tr><tr><td>\\</td><td>转义符，跟在之后的特殊符号将失去特殊含义，变为普通字符。如$将输出“$&quot;符号，而不当做是变量引用</td></tr><tr><td>#</td><td>在shell脚本里面表示注释</td></tr></tbody></table><p>案例如下：</p><figure><img src="'+r+'" alt="特殊符号案例" tabindex="0" loading="lazy"><figcaption>特殊符号案例</figcaption></figure><h2 id="父子shell" tabindex="-1"><a class="header-anchor" href="#父子shell"><span>父子shell</span></a></h2><p>什么是父shell，什么是子shell，看看下面这张图片，当我们使用pstree命令的时候，我我们可以看到这个命令是在shell的进程下面，这里为什么有两个bash，是因为我们在命令行界面运行了bash，他就要单独开了一个bash在父shell下面，所以前面的bash就是父shell，后面的bash就是子shell，当前进入子shell后，你的历史命令就会消失。</p><figure><img src="'+c+'" alt="image-20250217205644604" tabindex="0" loading="lazy"><figcaption>image-20250217205644604</figcaption></figure><p>请看如下操作（<strong>#后面灰色的内容是注释，不是命令</strong>）：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 我们使用如下方式来查看当前的进程</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@Fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --forest</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    PID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> TTY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          TIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CMD</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   1160</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   1185</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  \\_</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 进入子shell，当前进程中多了一个\\_bash</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@Fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@Fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --forest</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    PID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> TTY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          TIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CMD</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   1160</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   1186</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  \\_</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   1208</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">      \\_</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 再在进入一个子shell，当前进程多了一个\\_sh</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@Fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sh</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sh-5.2$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --forest</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    PID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> TTY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          TIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CMD</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   1160</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   1186</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  \\_</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   1209</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">      \\_</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sh</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   1210</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">          \\_</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 退出子shell</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sh-5.2$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exit</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">exit</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@Fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --forest</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    PID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> TTY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          TIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CMD</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   1160</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   1186</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  \\_</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   1211</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">      \\_</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 退出子shell</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@Fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exit</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">exit</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@Fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --forest</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    PID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> TTY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          TIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CMD</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   1160</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   1212</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  \\_</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们来分析下上面的操作，首先我们当前有一个bash shell，我们在当前的bash shell中有新开了一个bash，这个时候我们可以吧原来的bash shell看作是父shell，而新开的shell看作是子shell；然后我们新开的sh可以看作是第二个bash的子shell。</p><p>创建子shell的时候有些注意事项，如下：</p><ul><li>()执行一串命令时，需要重新开一个子shel进行执行；</li><li>{}执行一串命令时，是在当前shell执行；</li><li>()和}都是把一串的命令放在括号里面，并且命令之间用;号隔开；</li><li>()最后一个命令可以不用分号；</li><li>{}最后一个命令要用分号；</li><li>{}的第一个命令和左括号之间必须要有一个空格；</li><li>()里的各命令不必和括号有空格；</li><li>()和0中括号里面的某个命令的重定向只影响该命令，但括号外的重定向则影响到括号里的所有命令；</li></ul><p>例如：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@Fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> name=xxx252525.github.io</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@Fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $name</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">xxx252525.github.io</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@Fedora:~$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (name=1; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@Fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $name</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">xxx252525.github.io</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们来看看上面的代码，我们在shell里定义了一个name，我们使用小括号的时候输出的内容就变了，这是为什么呢？这不是覆盖了前面的值，这是在小括号里面的命令开启了一个子shell，命令在子shell中运行，输出的也是子shell的值，我们当前的shell就可以看作是父shell，所以再次执行的时候，显示的是当前父shell的值。</p><hr><p>当我们使用大括号的时候，他执行的命令就是在父shel里面执行的，而且必须注意的是，命令前后必须空格，否者就会像最后一行一样，语法是错误的。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@Fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> name=xxx252525.github.io</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 正确写法</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@Fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> name=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; }</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 错误写法</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@Fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> name=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; ^C</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@Fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {name=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;}</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-bash:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 未预期的记号</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;}&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 附近有语法错误</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container caution"><p class="hint-container-title">警告</p><p>注意：大括号前后都有空格，命令后面都有分号，如果没写对就会报错，如上代码。</p></div><p>查看当前是否使用了子shell还可以使用echo$BASH_SUBSHELL。</p><p>例如：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@Fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pwd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $BASH_SUBSHELL</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/home/miui</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">xxx252525.github.io</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：当echo$BASH_SUBSHELL的值是O的时候表示没有创建子shell来执行这些命令，如果输出的是1，表示创建了子shell来执行命令。</strong></p><h3 id="高效的子shell" tabindex="-1"><a class="header-anchor" href="#高效的子shell"><span>高效的子shell</span></a></h3><h4 id="后台模式" tabindex="-1"><a class="header-anchor" href="#后台模式"><span>后台模式</span></a></h4><p>一种高效的子shell用法就是后台模式，在命令的末尾加上&amp;就会将命令至于后台模式。演示后台模式的命令是sleep，进程睡眠，该命令在shell脚本中常用于引l入一段暂停时间。</p><p>请看下面的例子：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将它放置在后台十秒钟，然后使用ps查看当前的进程</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sleep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&amp;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[1] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">4267</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">UID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          PID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    PPID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> STIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> TTY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          TIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CMD</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">        3837</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    3830</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 17:52</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -bash</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">        4267</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    3837</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 19:58</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sleep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">        4268</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    3837</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 99</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 19:58</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[1]+  已完成               sleep 10</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用jobs可以查看当前的后台信息，jobs -l可以查看更多的信息</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sleep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&amp;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[1] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">4291</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> jobs</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[1]+  运行中               sleep 10 &amp;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> jobs</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -l</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[1]+  4291 已完成               sleep 10</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container caution"><p class="hint-container-title">警告</p><p>注意：进入睡眠模式的时候的ID号和ps进程中睡眠模式的ID号是一样的。</p></div><p>我们还可以把进程列表放置到后台。请看下面的例子：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ( </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">sleep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $BASH_SUBSHELL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> )&amp;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[1] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">4337</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[1]+  已完成               ( </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $BASH_SUBSHELL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> )</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="协程" tabindex="-1"><a class="header-anchor" href="#协程"><span>协程</span></a></h4><p>协程是一种程序组件，它允许多个入口点用于暂停和恢复执行的函数，可以在单个线程内实现多任务的并发执行。在Bash shell中，<code>coproc</code>命令可以用来在后台运行命令，同时允许前台继续执行其他操作，但这并不是创建一个子shell，而是创建一个协作进程。</p><p>请看下面的案例：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> coproc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sleep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[1] 4365</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    PID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> TTY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          TIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CMD</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   3837</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   4365</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sleep</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   4366</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[1]+  已完成               coproc COPROC sleep 10</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container caution"><p class="hint-container-title">警告</p><p>注意：协程是一种编程结构，它允许函数在某个点暂停执行，并在后续的时间点恢复执行，而不需要创建新的线程或进程。协程通常用于协作式多任务处理，它们在单个线程内运行，并且可以通过编程语言提供的特定机制来控制。协程不是后台任务，它们是前台任务的一部分，可以在程序的控制下进行交互和切换。</p><p>后台模式是将命令放入后台执行，这样前台就可以继续进行交互。通过在命令后面加上&amp;，命令会在后台运行，不会阻塞命令行。合理的运用子shell可以让我们事半功倍，后台在运行其他操作的时候不影响我们在主要的命令行进行其他操作。</p></div><p>我们每一次运行携程，这个进程的ID都是不一样的，例如这里是4404，上面是4365：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> coproc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sleep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[1] 4404</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> jobs</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[1]+  运行中               coproc COPROC sleep 10 &amp;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> jobs</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -l</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[1]+  4404 运行中               coproc COPROC sleep 10 &amp;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[1]+  已完成               coproc COPROC sleep 10</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们还可以给进程起名字，这里我们的名字被修改成了myjob1：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> coproc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> myjob1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sleep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; } &amp;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[1] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">4429</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> jobs</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[1]+  运行中               coproc myjob1 { </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; } &amp;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当我们进程没有结束的时候开启新的进程的时候，旧的进程依然会运行，直到它结束。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> coproc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sleep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[1] 4437</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    PID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> TTY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          TIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CMD</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   3837</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   4437</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sleep</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   4438</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> coproc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sleep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-bash:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 警告：execute_coproc:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 副进程</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [4437:COPROC] 仍然存在</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[2] 4439</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[1]-  已完成               coproc COPROC sleep 10</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> coproc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sleep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-bash:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 警告：execute_coproc:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 副进程</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [4439:COPROC] 仍然存在</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[3] 4440</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[2]   已完成               coproc COPROC sleep 10</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们第二次执行<code>coproc sleep 10</code>的时候，第一个协作进程(协程)还没有完成，仍然存在，第一个协程就在作为副进程继续运行，后面1进程完成了，我们开启第三个的时候，第二个仍然在执行。</p><p>我们还可以结合协程与进程列表使用，如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> coproc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ( </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">sleep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> )</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[1] 4460</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --forest</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    PID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> TTY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          TIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CMD</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   3837</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   4460</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  \\_</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   4461</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |   </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">\\_</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sleep</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   4462</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  \\_</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --forest</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    PID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> TTY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          TIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CMD</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   3837</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   4459</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  \\_</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[1]+  已完成               coproc COPROC ( </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> )</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从这两组信息可以看出，在我们运行协程和进程列表的时候，会再开一个bash子shell，然后再里面运行sleep进程列表，运行完成之后bash子sheli会自动关闭，留下一个完成的信息。</p><p>上一节讲了shell命令，有一些细节没有讲解，这里讲一下。至于函数、保留字、我们会在shell编程中去讲解。</p><h4 id="shell内置命令" tabindex="-1"><a class="header-anchor" href="#shell内置命令"><span>Shell内置命令</span></a></h4><p>内置命令是Shell自身的一部分，它们由Shell直接执行，不需要调用外部程序。内置命令通常用于控制Shell自身的行为或者执行一些基本的文件操作。</p><h4 id="外部命令" tabindex="-1"><a class="header-anchor" href="#外部命令"><span>外部命令</span></a></h4><p>外部命令也叫文件系统命令，外部命令是存在于Shell之外的独立程序，当执行外部命令时，Shell会创建一个新的进程来运行该命令。这取决与你的Linux发行版，不同的Linux存在差异。</p><p>例如这是Fedora返回的结果：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> which</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/usr/bin/ps</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> which</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pwd</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/usr/bin/pwd</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> which</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cd</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/usr/bin/cd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面这个是Kali Linux的结果：</p><figure><img src="'+g+'" alt="Kali" tabindex="0" loading="lazy"><figcaption>Kali</figcaption></figure><p>在Fedora Linux中，cd是外部命令，而kali Linux是内部命令。这就是不同Linux之间的区别。</p><p>当执行外部命令的时候就会创建一个子进程，这种操作叫做衍生。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    PID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> TTY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          TIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CMD</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   3837</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   4523</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">UID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          PID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    PPID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> STIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> TTY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          TIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CMD</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">        3837</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    3830</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 17:52</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -bash</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">        4538</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    3837</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 21:17</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为什么之前查看进程的时候每次都能看到ps，因为他是一个外部的命令，调用的时候会衍生子进程，在子进程里面执行外部命令，注意他们的PID号是不一样的。当出现进程衍生的时候就会消耗时间和资源来设置新的子进程环境，所以外部命令的开销较高。</p><h4 id="内建命令" tabindex="-1"><a class="header-anchor" href="#内建命令"><span>内建命令</span></a></h4><p>内建命令与外部命令不同，它们不需要创建子进程来执行，他们和shel编译成了一体，作为shell的组成部分存在。</p><p>有些命令既有内建命令也有外部命令，例如pwd和echo。使用type-a即可看见他们所有的路径。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> type</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pwd</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">pwd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 是</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 内建</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">pwd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 是</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/bin/pwd</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> type</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> echo</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 是</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 内建</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 是</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/bin/echo</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> type</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cd</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 是</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 内建</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 是</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/bin/cd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看见echo与pwd还有别的路径，他们不仅仅是shell内建命令。而<code>which</code>只能看见外部命令</p><h4 id="别名" tabindex="-1"><a class="header-anchor" href="#别名"><span>别名</span></a></h4><p>别名是Shell命令的一个快捷方式，它可以用来简化频繁使用的命令或者为命令设置默认参数。查看当前系统可以使用的别名可以使用命令<code>alias</code>。选项如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\t\t查看所有可以使用的别名</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>请看案例：</p><figure><img src="'+F+'" alt="查看所有别名" tabindex="0" loading="lazy"><figcaption>查看所有别名</figcaption></figure><p>这是已经内置好的别名，我们如果要设置别名可以这样操作：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">alias</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 别名=&#39;命令操作&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>请看案例：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> alias</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hn=&#39;hostname&#39;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">miui@fedora:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hn</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">fedora</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们把<code>hostname</code>命令定义成hn别名，能够直接使用。注意：被定义的别名仅在当前的shell内有效，他是内建命令。</p><p>如果要删除别名怎么办？操作如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">unalias</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 别名</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>请看案例：</p><figure><img src="'+o+'" alt="取消别名" tabindex="0" loading="lazy"><figcaption>取消别名</figcaption></figure><h2 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量"><span>环境变量</span></a></h2><p>Linux 环境变量是在 Linux 操作系统中用来存储系统信息的一组键值对。这些变量可以在不同的程序之间共享信息，并且可以影响程序的运行方式。环境变量通常分为两类：用户环境变量和系统环境变量。</p><ol><li><strong>用户环境变量</strong>：这些变量只对当前用户有效，它们通常存储在用户的主目录下的 <code>.bashrc</code> 或 <code>.profile</code> 文件中。用户可以通过修改这些文件来设置自己的环境变量。</li><li><strong>系统环境变量</strong>：这些变量对所有用户都有效，它们通常存储在 <code>/etc/environment</code> 文件或 <code>/etc/profile</code> 文件中。系统管理员可以通过修改这些文件来设置系统的环境变量。</li></ol><p>环境变量的作用包括但不限于：</p><ul><li>设置路径 (<code>PATH</code>) 变量以指定可执行文件的搜索路径。</li><li>指定默认的编辑器、终端类型等。</li><li>存储临时数据供脚本或程序使用。</li></ul><p>除此之外还存在全局环境变量和局部环境变量的概念。</p><h3 id="全局环境变量" tabindex="-1"><a class="header-anchor" href="#全局环境变量"><span>全局环境变量</span></a></h3><p>全局环境变量是对所有用户和所有进程都有效的环境变量。在系统启动时由系统的初始化脚本设置，或者在系统配置文件中设置，如 <code>/etc/profile</code>、<code>/etc/environment</code> 或 <code>/etc/profile.d/</code> 目录下的脚本。全局环境变量会影响系统的每个用户和每个启动的 shell。</p><p>例如，<code>PATH</code> 是一个全局环境变量，它定义了 shell 查找可执行文件的目录列表。</p><h4 id="查看变量" tabindex="-1"><a class="header-anchor" href="#查看变量"><span>查看变量</span></a></h4><p>查看全局变量可以使用命令env和printenv，如下图：</p><figure><img src="'+A+'" alt="env" tabindex="0" loading="lazy"><figcaption>env</figcaption></figure><figure><img src="'+y+'" alt="printenv" tabindex="0" loading="lazy"><figcaption>printenv</figcaption></figure><p>输出的内容基本上是一致的。但是当要查看个别环境变量的时候就只能使用printenv，请看案例：</p><figure><img src="'+u+'" alt="printenv与env的区别" tabindex="0" loading="lazy"><figcaption>printenv与env的区别</figcaption></figure><p>查看当前的环境变量就是前面用过的<code>echo $PATH</code>。</p><h4 id="设置全局环境变量" tabindex="-1"><a class="header-anchor" href="#设置全局环境变量"><span>设置全局环境变量</span></a></h4><p>语法如下：</p><div class="language-shell、 line-numbers-mode" data-highlighter="shiki" data-ext="shell、" data-title="shell、" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sudo echo &#39;export MYVARIABLE=&quot;globalvalue&quot;&#39; &gt;&gt; /etc/profile  # 添加到全局配置文件</span></span>\n<span class="line"><span>source /etc/profile  # 使变更生效</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>或者，可以在 <code>/etc/environment</code> 文件中直接设置全局环境变量，该文件为每个进程设置环境变量。</li><li><strong>局部环境变量覆盖全局环境变量</strong>： 如果在用户的局部环境中设置了与全局环境变量同名的变量，那么局部环境变量将覆盖全局环境变量。</li><li><strong>查看环境变量</strong>： 使用 <code>printenv</code> 或 <code>env</code> 命令可以查看当前 shell 的环境变量。使用 <code>export</code> 命令可以查看已导出的局部环境变量。</li><li><strong>环境变量的作用域</strong>： 全局环境变量的作用域是整个系统，而局部环境变量的作用域仅限于当前的 shell 会话或脚本。</li></ul><h3 id="局部环境变量" tabindex="-1"><a class="header-anchor" href="#局部环境变量"><span>局部环境变量</span></a></h3><p>局部环境变量只对当前 shell 会话或当前用户的特定进程有效。它们通常在用户的启动脚本中设置，如 <code>~/.bashrc</code> 或 <code>~/.profile</code>。局部环境变量不会影响其他用户的 shell 会话或同一用户的其他 shell 会话。</p><h4 id="设置局部环境变量" tabindex="-1"><a class="header-anchor" href="#设置局部环境变量"><span>设置局部环境变量</span></a></h4><p>语法如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> MYVARIABLE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;localvalue&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 在当前 shell 会话中设置局部环境变量</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个变量 <code>MYVARIABLE</code> 只在当前的 shell 会话中有效。</p><div class="hint-container caution"><p class="hint-container-title">警告</p><p>注意环境变量与自定义变量的区别是什么？</p><p>环境变量和用户自定义变量最主要的区别在于，环境变量是全局变量，而用户自定义变量是局部变量。用户自定义变量只在当前的Shellr中生效，而环境变量会在当前Shel和这个Shell的所有子Shell当中生效。</p></div><p>变量可以自定义，但是对系统生效的环境变量名和变量作用是固定的；当我们执行脚本的时候就需要指明脚本的路径，绝对路径或者是相对路径，如果向直接使用脚本命令就需要将该文将放入bin目录或者是将该文件目录添加到环境变量中去。</p><p>常用的环境变量如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">HOSTNAME：主机名</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SHELL:当前的shell</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">TERM:终端环境</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">HISTSIZE：历史命令条数</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SSH_CLIENT：当前操作环境是用ssh连接的，这里记录客户端ip</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SSH_TTY:ssh连接的终端时pts/1</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">USER：当前登灵录的用户</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ps1环境变量" tabindex="-1"><a class="header-anchor" href="#ps1环境变量"><span>PS1环境变量</span></a></h3><p>PS1变量是一种命令提示符设置，可以定义自己喜欢的提示符。也就是我们之前说的前面的这个东东：</p><figure><img src="'+v+'" alt="PS1环境变量" tabindex="0" loading="lazy"><figcaption>PS1环境变量</figcaption></figure><p>我们可以进行自定义，语法如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> PS1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39; [\\选项...\\选项] &#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>注意：目录前面有空格，[]外有空格。</p><p>常用的选项如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">\\d：显示日期，格式为“星期月日”</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">\\h：显示简写主机名。如默认主机名</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;1ocalhost”</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">\\H:显示完整的主机名。如默认主机名&quot;&#39;Localhost..localdomain”</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">\\t：显示24小时制时间，格式为HH：MM：SS”</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">\\T：显示12小时制时间，格式为“HH：MM：SS”</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">\\A：显示24小时制时间，格式为“HH：MM</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">\\u：显示当前用户名</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">\\W：显示当前所在目录的完整名称</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">\\W：显示当前所在目录的最后一个目录</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">\\$：提示符。如果是r0ot用户会显示提示符为“#”，如果是普通用户会显示提示符为“$”</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">\\A：显示24小时制时间，格式为“H：MM”</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@：显示l2小时制时间，格式为“HH：MMam/pm”</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">\\u:显示当前用户名</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">\\v：显示Bash的版本信息</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">\\#：执行的第几个命令</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以输出PS1环境变量，如下：</p><figure><img src="'+b+'" alt="输出PS1环境变量" tabindex="0" loading="lazy"><figcaption>输出PS1环境变量</figcaption></figure><p>在Linux中系统登录是主要生效的环境变量配置文件有以下五个：</p><ul><li>/etc/profile</li><li>/etc/profile.d/*.sh</li><li>~/.bash_profile</li><li>~/.bashrc</li><li>/etc/bashrc</li></ul><h3 id="环境变量持久化" tabindex="-1"><a class="header-anchor" href="#环境变量持久化"><span>环境变量持久化</span></a></h3><h4 id="全局环境变量持久化" tabindex="-1"><a class="header-anchor" href="#全局环境变量持久化"><span>全局环境变量持久化</span></a></h4><p>对于所有用户都有效的全局环境变量，我们可以通过以下步骤进行设置和持久化：</p><ol><li><p>使用 <code>/etc/environment</code></p><p>这个文件包含了系统级的全局环境变量。任何在这个文件中设置的变量对所有的用户都是有效的。例如，要为整个系统设置一个叫做 <code>MY_GLOBAL_VAR</code> 的环境变量，可以在该文件的末尾添加如下一行：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">MY_GLOBAL_VAR</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;value&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>保存更改后，新的环境变量就会在下次系统启动时生效。</p></li><li><p>使用 <code>/etc/profile</code> 或 <code>/etc/profile.d</code></p><p><code>/etc/profile</code> 是一个bash shell的全局配置文件，它会在每个交互式shell启动时读取。我们可以在其中添加或修改环境变量。例如：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> MY_GLOBAL_VAR</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;value&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>另外，<code>/etc/profile.d</code> 目录下的脚本也可以用来设置环境变量。这些脚本通常以 <code>.sh</code> 结尾，并在用户登录时由 <code>/etc/profile</code> 自动执行。</p></li></ol><h4 id="用户级环境变量持久化" tabindex="-1"><a class="header-anchor" href="#用户级环境变量持久化"><span>用户级环境变量持久化</span></a></h4><p>对于仅对特定用户有效的环境变量，我们可以通过以下方式实现：</p><ol><li><p>使用 <code>~/.bash_profile</code>, <code>~/.bashrc</code> 或 <code>~/.profile</code></p><p>这些文件位于用户的家目录下，分别对应不同类型的shell会话。例如，要在当前用户的 <code>.bashrc</code> 文件中设置一个环境变量，可以这样做：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;export MY_USER_VAR=&quot;value&quot;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt;&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">~/.bashrc</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">source</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.bashrc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>第一行命令将环境变量设置写入 <code>.bashrc</code> 文件，第二行命令立即应用更改而不需重启shell。</p></li><li><p>直接在终端中设置</p><p>有时，你可能想在当前的shell会话中临时设置一个环境变量，但不想将其永久保存在配置文件中。这时可以直接在终端中使用 <code>export</code> 命令：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> MY_TEMP_VAR</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;temporary value&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这种方式设置的环境变量只对当前的shell会话有效，一旦关闭shell窗口，该变量就会失效。</p></li></ol><h3 id="系统语序" tabindex="-1"><a class="header-anchor" href="#系统语序"><span>系统语序</span></a></h3><p>我们可以通过locale查看和设置本地语序规则，语序就是字符集、地区、国家和语言。例如：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">zh_CN.utf8</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">zh：表示中文</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CN：表示大陆地区</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Utf8：表示字符集</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">de_DE.utf-8@euro</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">de：表示德语</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">DE：表示德国</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Utf-8：表示字符集</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">euro：表示按照欧洲习惯加以</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询当前使用语序：</p><figure><img src="'+m+'" alt="当前语序" tabindex="0" loading="lazy"><figcaption>当前语序</figcaption></figure><div class="hint-container caution"><p class="hint-container-title">警告</p><p>注意优先级：LC<em>ALL&gt;LC_</em>&gt;LANG</p></div><p>查看当前系统语序</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $LANG</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看Linux支持的所有语序</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">locale</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>设置系统语序</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#可以修改/etc/profile文件</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#修改/etc/profile文件，在最下面增加</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> LC_ALL</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zh_CN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">utf8</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> LANG</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zh_CN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">utf8</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#命令行中使用命令source下配置文件，使其生效</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#修改/etc/locale.gen文件</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#将注释打开即可，修改完成后，执行下 locale-gen 命令使其生效</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#en_SG IS0-8859-1</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">en_US.UTF-8</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> UTF-8</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#en_US IS0-8859-1</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#命令行模式</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">localectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set-locale</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> LANG=en_US.uTF-8</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">修改/etc/default/locale</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#注销一下，使其生效</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">LANG</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;en_US.UTF-8&quot;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">LANGUAGE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;en_US:en&quot;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#创建/etc/Locale.conf文件</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">LANG</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">en_AU.UTF-8</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">LC_COLLATE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">C</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">LC_TIME</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">en_DK.UTF-8</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 让配置重新加载</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">source</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="位置参数变量" tabindex="-1"><a class="header-anchor" href="#位置参数变量"><span>位置参数变量</span></a></h3><figure><img src="'+C+'" alt="位置参数变量" tabindex="0" loading="lazy"><figcaption>位置参数变量</figcaption></figure><p>注意：</p><ul><li>$*会把每一个参数看成一个整体</li><li>$@会把每个参数当成独立的个体</li><li>当使用for循环的时候就可以看出二者明显的差距</li></ul><h3 id="预定义变量" tabindex="-1"><a class="header-anchor" href="#预定义变量"><span>预定义变量</span></a></h3><figure><img src="'+f+'" alt="预定义变量" tabindex="0" loading="lazy"><figcaption>预定义变量</figcaption></figure><p>案例：</p><figure><img src="'+E+'" alt="案例" tabindex="0" loading="lazy"><figcaption>案例</figcaption></figure><h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h2><ul><li><p>~/.bash_profile的作用：</p><ul><li><p>调用了~/.bashrc文件，只有用户登陆的时候才执行这个文件。</p></li><li><p>在PATH变量后面加入了&quot;：$HOME/bin&quot;这个目录。</p></li></ul></li><li><p>/etc/bashrc的作用：</p><ul><li><p>PS1变量</p></li><li><p>umask</p></li><li><p>PATH变量</p></li><li><p>调用/etc/profile.d/*.sh文件</p></li></ul></li><li><p>~/.bash_logout：</p><ul><li>该文件默认是空的，只有当你执行关机的时候进行某种操作才会有内容</li></ul></li><li><p>~/bash_history：</p><ul><li><p>该文件会保存你上次登录终端后使用的历史命令</p></li><li><p>若要修改历史命令的上限需要在.bashrc和/etc/profile文件中修改</p></li></ul></li><li><p>/etc/profile：</p><ul><li>给每个用户设置用户环境。</li></ul></li></ul><h3 id="source" tabindex="-1"><a class="header-anchor" href="#source"><span>source</span></a></h3><p>修改配置文件后使用该命令让文件直接生效，直接让脚本生效都可以，.在做命令使用的时候就是<code>source</code>。</p><p>语法：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">source</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 配置文件</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 或者</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">．配置文件</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="shell登陆信息" tabindex="-1"><a class="header-anchor" href="#shell登陆信息"><span>shell登陆信息</span></a></h2><figure><img src="'+B+'" alt="登陆欢迎信息" tabindex="0" loading="lazy"><figcaption>登陆欢迎信息</figcaption></figure><p>本地终端欢迎信息：/etc/issue；远程终端欢迎信息：/etc/issue.net</p><div class="hint-container caution"><p class="hint-container-title">警告</p><p>注意：</p><p>转义符在/etc/issue..net文件中不能使用</p><p>是否显示此欢迎信息，由ssh的配置文件</p><p>/etc/ssh/sshd_config决定，加入</p><p>&quot;Banner/etc/issue.net&quot;行才能显示（记得重启SSH服务）</p></div>',217)]))}]]),S=JSON.parse('{"path":"/Linux/04shell%E5%8F%98%E9%87%8F.html","title":"04-shell变量","lang":"zh-CN","frontmatter":{"icon":"/assets/icon/linux.svg","category":["运维基础"],"contributors":true,"lastUpdated":true,"pageview":true,"isOriginal":true,"date":"2025-02-18T00:00:00.000Z","description":"04-shell变量 在Shell脚本编程中，变量是用来存储和使用数据的内存位置。Shell变量可以是数字、文本字符串或者文件名等。这里我们不讲解shell编程，shell编程我们会专门开一个内容板块来学习，请跳转到此处学习：https://xxx252525.github.io/Shell/。 变量的类型 在shell变量中我们有几种类型，分别是： ...","head":[["meta",{"property":"og:url","content":"https://xxx252525.github.io/Linux/04shell%E5%8F%98%E9%87%8F.html"}],["meta",{"property":"og:site_name","content":"天韵阁~三味书屋"}],["meta",{"property":"og:title","content":"04-shell变量"}],["meta",{"property":"og:description","content":"04-shell变量 在Shell脚本编程中，变量是用来存储和使用数据的内存位置。Shell变量可以是数字、文本字符串或者文件名等。这里我们不讲解shell编程，shell编程我们会专门开一个内容板块来学习，请跳转到此处学习：https://xxx252525.github.io/Shell/。 变量的类型 在shell变量中我们有几种类型，分别是： ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-20T10:25:06.000Z"}],["meta",{"property":"article:published_time","content":"2025-02-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-20T10:25:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"04-shell变量\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-02-18T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-20T10:25:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"天阁创客official\\",\\"url\\":\\"https://tiangesec.org.cn\\",\\"email\\":\\"tiangesec@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"变量的类型","slug":"变量的类型","link":"#变量的类型","children":[]},{"level":2,"title":"变量的定义","slug":"变量的定义","link":"#变量的定义","children":[{"level":3,"title":"变量叠加","slug":"变量叠加","link":"#变量叠加","children":[]},{"level":3,"title":"变量行为查看","slug":"变量行为查看","link":"#变量行为查看","children":[]},{"level":3,"title":"变量删除","slug":"变量删除","link":"#变量删除","children":[]}]},{"level":2,"title":"shell的基本功能","slug":"shell的基本功能","link":"#shell的基本功能","children":[{"level":3,"title":"优先级","slug":"优先级","link":"#优先级","children":[]},{"level":3,"title":"多命令执行符","slug":"多命令执行符","link":"#多命令执行符","children":[{"level":4,"title":";","slug":"","link":"#","children":[]},{"level":4,"title":"&&","slug":"-1","link":"#-1","children":[]},{"level":4,"title":"||","slug":"-2","link":"#-2","children":[]}]},{"level":3,"title":"特殊符号","slug":"特殊符号","link":"#特殊符号","children":[]}]},{"level":2,"title":"父子shell","slug":"父子shell","link":"#父子shell","children":[{"level":3,"title":"高效的子shell","slug":"高效的子shell","link":"#高效的子shell","children":[{"level":4,"title":"后台模式","slug":"后台模式","link":"#后台模式","children":[]},{"level":4,"title":"协程","slug":"协程","link":"#协程","children":[]},{"level":4,"title":"Shell内置命令","slug":"shell内置命令","link":"#shell内置命令","children":[]},{"level":4,"title":"外部命令","slug":"外部命令","link":"#外部命令","children":[]},{"level":4,"title":"内建命令","slug":"内建命令","link":"#内建命令","children":[]},{"level":4,"title":"别名","slug":"别名","link":"#别名","children":[]}]}]},{"level":2,"title":"环境变量","slug":"环境变量","link":"#环境变量","children":[{"level":3,"title":"全局环境变量","slug":"全局环境变量","link":"#全局环境变量","children":[{"level":4,"title":"查看变量","slug":"查看变量","link":"#查看变量","children":[]},{"level":4,"title":"设置全局环境变量","slug":"设置全局环境变量","link":"#设置全局环境变量","children":[]}]},{"level":3,"title":"局部环境变量","slug":"局部环境变量","link":"#局部环境变量","children":[{"level":4,"title":"设置局部环境变量","slug":"设置局部环境变量","link":"#设置局部环境变量","children":[]}]},{"level":3,"title":"PS1环境变量","slug":"ps1环境变量","link":"#ps1环境变量","children":[]},{"level":3,"title":"环境变量持久化","slug":"环境变量持久化","link":"#环境变量持久化","children":[{"level":4,"title":"全局环境变量持久化","slug":"全局环境变量持久化","link":"#全局环境变量持久化","children":[]},{"level":4,"title":"用户级环境变量持久化","slug":"用户级环境变量持久化","link":"#用户级环境变量持久化","children":[]}]},{"level":3,"title":"系统语序","slug":"系统语序","link":"#系统语序","children":[]},{"level":3,"title":"位置参数变量","slug":"位置参数变量","link":"#位置参数变量","children":[]},{"level":3,"title":"预定义变量","slug":"预定义变量","link":"#预定义变量","children":[]}]},{"level":2,"title":"配置文件","slug":"配置文件","link":"#配置文件","children":[{"level":3,"title":"source","slug":"source","link":"#source","children":[]}]},{"level":2,"title":"shell登陆信息","slug":"shell登陆信息","link":"#shell登陆信息","children":[]}],"git":{"createdTime":1739888242000,"updatedTime":1740047106000,"contributors":[{"name":"xxx252525","username":"xxx252525","email":"1072441436@qq.com","commits":3,"url":"https://github.com/xxx252525"}]},"readingTime":{"minutes":25.51,"words":7654},"filePathRelative":"Linux/04shell变量.md","localizedDate":"2025年2月18日","autoDesc":true}')}}]);