"use strict";(self.webpackChunkxxx252525_github_io=self.webpackChunkxxx252525_github_io||[]).push([[5903],{1021:(i,a)=>{a.A=(i,a)=>{const s=i.__vccOpts||i;for(const[i,e]of a)s[i]=e;return s}},3053:(i,a,s)=>{s.r(a),s.d(a,{comp:()=>y,data:()=>F});var e=s(6254);const t=s.p+"assets/img/image-20241008195659165.26deed65.png",n=s.p+"assets/img/PixPin_2024-10-08_20-59-33.bb206f95.gif",l=s.p+"assets/img/PixPin_2024-10-08_21-00-44.1659e99e.gif",d=s.p+"assets/img/image-20241009112329314.5d7b1d5d.png",g=s.p+"assets/img/image-20241009112800268.d92680b6.png",r=s.p+"assets/img/image-20241009113125497.54c194e2.png",p=s.p+"assets/img/PixPin_2024-10-09_15-35-23.cc3f47a9.gif",h=s.p+"assets/img/image-20241009153738643.aa571e34.png",o=s.p+"assets/img/image-20241009153858923.b6b57ef0.png",c=s.p+"assets/img/image-20241009155940777.4280560d.png",k=s.p+"assets/img/PixPin_2024-10-09_16-10-51.2164a19f.gif",m=s.p+"assets/img/image-20241009161901645.6f88cb84.png",b=s.p+"assets/img/image-20241009162034237.71fe0e85.png",u=s.p+"assets/img/image-20241009162442939.2682127e.png",v=s.p+"assets/img/image-20241009163028372.5c0ae737.png",f=s.p+"assets/img/image-20241009163835483.4382ff3a.png",A={},y=(0,s(1021).A)(A,[["render",function(i,a){return(0,e.uX)(),(0,e.CE)("div",null,a[0]||(a[0]=[(0,e.Fv)('<h1 id="_04-日志logcat" tabindex="-1"><a class="header-anchor" href="#_04-日志logcat"><span>04-日志logcat</span></a></h1><p><code>logcat</code> 是 <code>adb</code> 命令中的一个重要组成部分，它是用于在Android设备上查看实时系统日志的命令。通过 <code>logcat</code>，开发者可以监控应用程序的运行情况，查看系统消息、调试信息、警告和错误等。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logcat</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">\t\t\t\t\t\t\t\t--查看日志</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logcat</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">\t\t\t\t\t\t\t--清除日志</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logcat</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">\t\t\t\t\t\t\t--显示缓冲区的大小</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logcat</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -G</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 256M</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">\t\t\t\t\t\t--修改缓冲区的大小</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logcat</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> time</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">\t\t\t\t\t\t--设置不同的显示格式</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logcat</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> color</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">\t\t\t\t\t\t--带颜色显示</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logcat</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">s&gt;\t\t\t\t</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">--g根据tag过滤日志</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>任何程序在运行的时候都会产生日志文件，如果没有日志文件，我们就无法对软件的BUG和安全问题进行修复，所以开发者在开发的时候会编写这个功能，如果没有该功能，说明你不是一个合格的开发者。</p><p>Android系统是存在系统日志的，在开发者模式里面就可以设置日志记录缓冲区的缓存大小，如下：</p><img src="'+t+'" alt="image-20241008195659165" style="zoom:80%;"><hr><p>使用logcat命令即可查看系统日志和软件日志。</p><blockquote><p>例如：</p></blockquote><p>查看当前的系统日志</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>adb logcat</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="'+n+'" alt="PixPin_2024-10-08_20-59-33" tabindex="0" loading="lazy"><figcaption>PixPin_2024-10-08_20-59-33</figcaption></figure><hr><p>清除系统日志</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logcat</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="'+l+'" alt="PixPin_2024-10-08_21-00-44" tabindex="0" loading="lazy"><figcaption>PixPin_2024-10-08_21-00-44</figcaption></figure><p>可以看见我们的日志从9点17秒开始记录的，之前的日志全部清除了。</p><hr><p>查看日志缓冲区</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>adb logcat -g</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可以看见默认设置的是256KB</p><figure><img src="'+d+'" alt="image-20241009112329314" tabindex="0" loading="lazy"><figcaption>image-20241009112329314</figcaption></figure><hr><p>正常情况下，256KB太小了，很快就写满了，我们可以将其修改大一点</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>adb logcat -G 1M</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="'+g+'" alt="image-20241009112800268" tabindex="0" loading="lazy"><figcaption>image-20241009112800268</figcaption></figure><p>将参数改为G，然后后面跟上大小，即可实现更改，可以看见我们把缓冲区的大小设置成了1MB。</p><hr><p>注意默认情况下是没有高亮的，我上面有高亮是因为我是用的终端对数字有配色：</p><figure><img src="'+r+'" alt="image-20241009113125497" tabindex="0" loading="lazy"><figcaption>image-20241009113125497</figcaption></figure><p>如果想要更明显，使用颜色高亮，我们需要带颜色显示内容，使用以下命令来实现：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>adb logcat -v color</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="'+p+'" alt="PixPin_2024-10-09_15-35-23" tabindex="0" loading="lazy"><figcaption>PixPin_2024-10-09_15-35-23</figcaption></figure><p>可以看见，日志的信息有了颜色区分，这样更方便信息的浏览，同一颜色观感是很难受的。</p><hr><p>我们还可以更改日志的输出格式，例如我们可以吧时间信息提前</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>adb logcat -v time</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这是原来的日志输出格式：</p><figure><img src="'+h+'" alt="image-20241009153738643" tabindex="0" loading="lazy"><figcaption>image-20241009153738643</figcaption></figure><p>这是更改后的格式：</p><figure><img src="'+o+'" alt="image-20241009153858923" tabindex="0" loading="lazy"><figcaption>image-20241009153858923</figcaption></figure><p>可以看见我们的进程ID和PID这些信息没有了，只有时间相关的信息被放在最前面，其次是日志的级别，进程和进程的ID、日志的内容等。</p><h2 id="日志过滤" tabindex="-1"><a class="header-anchor" href="#日志过滤"><span>日志过滤</span></a></h2><p>我们日常分析的额时候不可能查看大量的日志，我们需要定点分析，所以我们要对日志的信息进行过滤，以方便我们分析软件的bug和漏洞。</p><h3 id="tag过滤" tabindex="-1"><a class="header-anchor" href="#tag过滤"><span>tag过滤</span></a></h3><p>首先我们可以通过tag来过滤日志，因为在日志输出中，每条日志都有一个标记tag，用于指示日志的来源。</p><p>使用以下命令进行日志过滤：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>adb logcat -s string</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>string可以是任何字符串，比如QQ、WeChat、bilibili等相关程序名称的信息，利用这些字符串就可以进行过滤。</p><h3 id="pid过滤" tabindex="-1"><a class="header-anchor" href="#pid过滤"><span>PID过滤</span></a></h3><p>还可以使用PID和ID等信息来进行过滤，例如：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Linux：</span></span>\n<span class="line"><span>adb logcat | grep 80</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>Windows：</span></span>\n<span class="line"><span>adb logcat | findstr 80</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>比如上面这条命令，表示我要查看PID进程的值为80的日志信息。</p><h3 id="自定义过滤" tabindex="-1"><a class="header-anchor" href="#自定义过滤"><span>自定义过滤</span></a></h3><p>根据日志内的信息进行过滤</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>adb logcat | grep setting</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>过滤信息如图：</p><figure><img src="'+c+'" alt="image-20241009155940777" tabindex="0" loading="lazy"><figcaption>image-20241009155940777</figcaption></figure><h2 id="在androidstudio中使用logcat" tabindex="-1"><a class="header-anchor" href="#在androidstudio中使用logcat"><span>在AndroidStudio中使用logcat</span></a></h2><p>在Android Studio中，我们可以通过可视化的界面来查看系统的日志，如图：</p><figure><img src="'+k+'" alt="PixPin_2024-10-09_16-10-51" tabindex="0" loading="lazy"><figcaption>PixPin_2024-10-09_16-10-51</figcaption></figure><p>我们可以在AndroidStudio中的左下角，点击小猫咪，这个小猫咪就是logcat，然后我们可以选择对应的设备，在右边输入要查找的日志信息、进程ID、PID、tag等，可以快速的查找日志，并且简洁美观，很方便我们进行日志分析。</p><h3 id="过滤running-processes" tabindex="-1"><a class="header-anchor" href="#过滤running-processes"><span>过滤Running Processes</span></a></h3><p>如果我们要过滤当前正在运行的进程，怎么办呢？只需要在搜索栏目里面搜索package:mine即可。</p><p>如图：</p><figure><img src="'+m+'" alt="image-20241009161901645" tabindex="0" loading="lazy"><figcaption>image-20241009161901645</figcaption></figure><h4 id="过滤debug" tabindex="-1"><a class="header-anchor" href="#过滤debug"><span>过滤Debug</span></a></h4><p>只需要搜索level:debug即可</p><figure><img src="'+b+'" alt="image-20241009162034237" tabindex="0" loading="lazy"><figcaption>image-20241009162034237</figcaption></figure><h4 id="过滤错误" tabindex="-1"><a class="header-anchor" href="#过滤错误"><span>过滤错误</span></a></h4><p>只需要搜索level:error即可</p><figure><img src="'+u+'" alt="image-20241009162442939" tabindex="0" loading="lazy"><figcaption>image-20241009162442939</figcaption></figure><p>不同的等级过滤出来的信息是不同的，下级是无法查看到上级的信息的，等级规则如下：</p><ol><li><strong>V</strong> – Verbose（详细）</li><li><strong>D</strong> – Debug（调试）</li><li><strong>I</strong> – Info（信息）</li><li><strong>W</strong> – Warn（警告）</li><li><strong>E</strong> – Error（错误）</li><li><strong>F</strong> – Fatal（致命）</li><li><strong>S</strong> – Silent（静默）</li></ol><p>从上而下，上面会看到更多的信息，下面看到的信息更少，更直接，很多时候我们看到不是详细的信息，更多的是调试、警告、错误、致命等信息。S级别是看不到任何日志的，因为屏蔽了所有的日志。</p><hr><p>我们还可以通过日志里面信息文本来进行过滤：</p><figure><img src="'+v+'" alt="image-20241009163028372" tabindex="0" loading="lazy"><figcaption>image-20241009163028372</figcaption></figure><h4 id="多重过滤" tabindex="-1"><a class="header-anchor" href="#多重过滤"><span>多重过滤</span></a></h4><p>我们可以通过过滤信息的组合实现更精细的过滤，找到我们想要的答案，例如</p><figure><img src="'+f+'" alt="image-20241009163835483" tabindex="0" loading="lazy"><figcaption>image-20241009163835483</figcaption></figure><p>类似的用法，大家可以只有探索，或者翻阅官方文档！</p>',82)]))}]]),F=JSON.parse('{"path":"/AndroidReverse/01-Android%E5%9F%BA%E7%A1%80/04-logcat%E6%97%A5%E5%BF%97.html","title":"04-日志logcat","lang":"zh-CN","frontmatter":{"icon":"/assets/icon/android.svg","category":["Android逆向"],"contributors":true,"lastUpdated":true,"pageview":true,"isOriginal":true,"description":"04-日志logcat logcat 是 adb 命令中的一个重要组成部分，它是用于在Android设备上查看实时系统日志的命令。通过 logcat，开发者可以监控应用程序的运行情况，查看系统消息、调试信息、警告和错误等。 任何程序在运行的时候都会产生日志文件，如果没有日志文件，我们就无法对软件的BUG和安全问题进行修复，所以开发者在开发的时候会编写这...","head":[["meta",{"property":"og:url","content":"https://xxx252525.github.io/AndroidReverse/01-Android%E5%9F%BA%E7%A1%80/04-logcat%E6%97%A5%E5%BF%97.html"}],["meta",{"property":"og:site_name","content":"天阁创客的三味书屋"}],["meta",{"property":"og:title","content":"04-日志logcat"}],["meta",{"property":"og:description","content":"04-日志logcat logcat 是 adb 命令中的一个重要组成部分，它是用于在Android设备上查看实时系统日志的命令。通过 logcat，开发者可以监控应用程序的运行情况，查看系统消息、调试信息、警告和错误等。 任何程序在运行的时候都会产生日志文件，如果没有日志文件，我们就无法对软件的BUG和安全问题进行修复，所以开发者在开发的时候会编写这..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-15T05:06:19.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-15T05:06:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"04-日志logcat\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-15T05:06:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"天阁创客official\\",\\"url\\":\\"https://tiangesec.org.cn\\",\\"email\\":\\"tiangesec@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"日志过滤","slug":"日志过滤","link":"#日志过滤","children":[{"level":3,"title":"tag过滤","slug":"tag过滤","link":"#tag过滤","children":[]},{"level":3,"title":"PID过滤","slug":"pid过滤","link":"#pid过滤","children":[]},{"level":3,"title":"自定义过滤","slug":"自定义过滤","link":"#自定义过滤","children":[]}]},{"level":2,"title":"在AndroidStudio中使用logcat","slug":"在androidstudio中使用logcat","link":"#在androidstudio中使用logcat","children":[{"level":3,"title":"过滤Running Processes","slug":"过滤running-processes","link":"#过滤running-processes","children":[{"level":4,"title":"过滤Debug","slug":"过滤debug","link":"#过滤debug","children":[]},{"level":4,"title":"过滤错误","slug":"过滤错误","link":"#过滤错误","children":[]},{"level":4,"title":"多重过滤","slug":"多重过滤","link":"#多重过滤","children":[]}]}]}],"git":{"createdTime":1739595979000,"updatedTime":1739595979000,"contributors":[{"name":"xxx252525","username":"xxx252525","email":"1072441436@qq.com","commits":1,"url":"https://github.com/xxx252525"}]},"readingTime":{"minutes":5.03,"words":1509},"filePathRelative":"AndroidReverse/01-Android基础/04-logcat日志.md","localizedDate":"2025年2月15日","autoDesc":true}')}}]);